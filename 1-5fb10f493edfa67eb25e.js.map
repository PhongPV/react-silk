{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/seo.tsx","webpack:///./src/components/header.tsx","webpack:///./src/components/Footer/index.tsx","webpack:///./src/components/Layout/index.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","a","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","createElement","Consumer","staticQueryData","data","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","SEO","_ref","description","lang","meta","_ref$keywords","keywords","title","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","Nav","styled","nav","attrs","className","withConfig","displayName","componentId","NavItems","ul","NavItem","li","Brand","Link","styles","StyleSheet","create","brand","color","Header","siteTitle","react_default","to","react_silk_ui_es","style","gatsby_browser_entry","href","Wrapper","footer","Footer","react","iconFontStyles","iconFont","document","type","styleSheet","cssText","appendChild","createTextNode","head","installIconComponent","FontAwesome","Layout","Fragment","header","_755544856","node","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape"],"mappings":"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","file":"1-5fb10f493edfa67eb25e.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nexport interface Prop {\n  description?: string\n  lang?: string\n  keywords?: string[]\n  title: string\n  meta?: any\n}\n\nconst SEO: React.FunctionComponent<Prop> = ({\n  description,\n  lang,\n  meta,\n  keywords = [],\n  title,\n}) => {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : [],\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import { Link } from 'gatsby'\nimport React from 'react'\nimport { StyleSheet } from 'react-native'\nimport { Heading3 } from 'react-silk-ui'\nimport styled from 'styled-components'\n\nconst Nav = styled.nav.attrs({\n  className: 'container',\n})`\n  display: flex;\n  align-items: center;\n`\nconst NavItems = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: row;\n  margin-left: auto;\n  margin-bottom: 0;\n  padding: 0;\n`\n\nconst NavItem = styled.li`\n  a {\n    padding: 1rem;\n    display: block;\n    color: #757575;\n    :hover {\n      text-decoration: none;\n      color: #111;\n    }\n  }\n`\nconst Brand = styled(Link)`\n  :hover {\n    text-decoration: none;\n  }\n`\n\nconst styles = StyleSheet.create({\n  brand: {\n    color: '#111',\n  },\n})\n\nexport interface Prop {\n  siteTitle: string\n}\n\nconst Header: React.FunctionComponent<Prop> = ({ siteTitle }) => (\n  <div>\n    <Nav>\n      <Brand to=\"/\">\n        <Heading3 style={styles.brand}>{siteTitle}</Heading3>\n      </Brand>\n      <NavItems>\n        <NavItem>\n          <Link to=\"/components/text\">Components</Link>\n        </NavItem>\n        <NavItem>\n          <Link to=\"/showcase\">Showcase</Link>\n        </NavItem>\n        <NavItem>\n          <a href=\"https://github.com/youngtailors/react-silk\">Github</a>\n        </NavItem>\n      </NavItems>\n    </Nav>\n  </div>\n)\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import * as React from 'react'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.footer.attrs({\n  className: 'container-fluid',\n})`\n  padding: 2rem 0;\n  border-top: 1px solid #dfdfdf;\n  margin-top: 2rem;\n  text-align: center;\n`\n\nexport default () => <Wrapper>&copy; 2019 Young Tailors</Wrapper>\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\nimport iconFont from 'react-native-vector-icons/Fonts/FontAwesome.ttf'\nimport FontAwesome from 'react-native-vector-icons/dist/FontAwesome'\nimport { installIconComponent } from 'react-silk-ui'\n\nimport Header from '../header'\nimport Footer from '../Footer'\nimport './reboot.css'\nimport './grid.css'\n\nconst iconFontStyles = `@font-face {\n  src: url(${iconFont});\n  font-family: FontAwesome;\n}`\n\nconst style = document.createElement('style')\nstyle.type = 'text/css'\nif ((style as any).styleSheet) {\n  ;(style as any).styleSheet.cssText = iconFontStyles\n} else {\n  style.appendChild(document.createTextNode(iconFontStyles))\n}\n\ndocument.head.appendChild(style)\ninstallIconComponent(FontAwesome)\n\nconst Layout: React.FunctionComponent = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div className=\"container\">{children}</div>\n        <Footer />\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}